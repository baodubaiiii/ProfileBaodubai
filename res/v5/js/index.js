//////////////////////////////////////////////////////////////////
/**
 * @package thanhdieuv5 (tester)
 * @author  V∆∞∆°ng Thanh Di·ªáu <www.facebok.com/wusthanhdieu>
 * @description Not every source code, when upgraded to a new version, needs to resemble the old version or be necessarily more aesthetically pleasing than previous versions, it simply marks the version of the new source code
 */
//////////////////////////////////////////////////////////////////
/**
 * Commence the initialization of the backend framework.
 */
$(function() {
    Wstoast.config({
        autoClose: true,
        showClose: true,
        html: true
    })
let WsLoaded = false; 
const messages = [
    { message: 'ƒêang t·∫£i t√†i nguy√™n...', delay: 0 },
    { message: 'ƒêang t·∫£i c√°c plugins...', delay: 5000 },
    { message: 'Ch·ªù x√≠u s·∫Øp t·∫£i xong....', delay: 12000 },
    { message: 'C√≥ th·ªÉ m·∫•t nhi·ªÅu th·ªùi gian', delay: 20000 }
];
messages.forEach(msg => {
    setTimeout(() => {
        if (!WsLoaded) {
            Wstoast.closeAll();
            WsToast('loading', msg.message);
        }
    }, msg.delay);
});
    function WsToast(type, message) {
        switch (type) {
            case 'error':
                Wstoast.error(message);
                break;
            case 'success':
                Wstoast.success(message);
                break;
            case 'info':
                Wstoast.info(message);
                break;
            case 'loading':
                Wstoast.loading(message);
                break;
            default:
                console.error('error toast');
        }
    }

    /**
     * Frame FPS inspection area.
     */
    if (null == window.localStorage.getItem("fpson") || "1" == window.localStorage.getItem("fpson")) {
        var rAF = window.requestAnimationFrame || window.webkitRequestAnimationFrame || function(e) {
                window.setTimeout(e, 1e3 / 60)
            },
            Frame = 0,
            AllFrameCount = 0,
            LastTime = Date.now(),
            LastFameTime = Date.now(),
            loop = function() {
                var e = Date.now(),
                    a = e - LastFameTime,
                    o = Math.round(1e3 / a);
                if (LastFameTime = e, AllFrameCount++, Frame++, e > 1e3 + LastTime) {
                    var o = Math.round(1e3 * Frame / (e - LastTime));
                    var n;
                    if (o >= 120) {
                        n = '<span style="color:#00c78f">M√°y Kho·∫ªüòõ</span>';
                    } else if (o <= 5) {
                        n = '<span style="color:#c70000">Lag N·ªï M√°yü§¢</span>';
                    } else if (o <= 10) {
                        n = '<span style="color:red">Si√™u Lagüò≠</span>';
                    } else if (o <= 15) {
                        n = '<span style="color:red">Qu√° Lagüòñ</span>';
                    } else if (o <= 25) {
                        n = '<span style="color:orange">Kh√≥ Ch·ªãuüò®</span>';
                    } else if (o < 35) {
                        n = '<span style="color:#9338e6">Kh√¥ng M∆∞·ª£t L·∫ØmüôÑ</span>';
                    } else if (o <= 45) {
                        n = '<span style="color:#f51698">T·∫°m ·ªînüòß</span>';
                    } else if (o <= 55) {
                        n = '<span style="color:#068c18">·ªîn ƒê·ªãnhüòÅ</span>';
                    } else if (o >= 80 && o <= 120) {
                        n = '<span style="color:#c70000">M∆∞·ª£t Qu√°üòò</span>';
                    } else {
                        n = '<span style="color:#009e45">B√¨nh Th∆∞·ªùngüòÇ</span>';
                    }
                    $("#fps").html(`<font color="#640366">FPS:${o} ${n}</font>`);
                    Frame = 0;
                    LastTime = e;
                }
                rAF(loop)
            };
        loop()
    } else $("#fps").css("display", "none!important");
    /**
     * Type Text.
     */
    var usernames = $('#userName').data('username');
    if (usernames) {
        new Typed('#userName', {
            strings: usernames,
            typeSpeed: 60,
            loop: true
        });
    } else {
        Wstoast.error('Username is undefined or null');
    }

    /**
     * Kh·ªüi T·∫°o Ch·∫ø ƒê·ªô Destroy
     */
    var inceptionLevel = 1,
        offsetLevel = 0;
    var lastRandomX = -1;
    var lastRandomY = -1;

    function OpenWindowError() {
        if (offsetLevel > 12222) { // Reset destroy n·∫øu v∆∞·ª£t qu√° gi·ªõi h·∫°n
            offsetLevel = 0;
        }
        var randomX, randomY;
        do {
            randomX = Math.floor(Math.random() * ($(document).width() - 360));
            randomY = Math.floor(Math.random() * ($(document).height() - 200));
        } while (randomX === lastRandomX && randomY === lastRandomY);

        lastRandomX = randomX;
        lastRandomY = randomY;
        new jBox("Modal", {
            width: 360,
            addClass: "inception-modal",
            overlayClass: "inception-overlay",
            zIndex: "auto",
            draggable: "title",
            closeOnClick: 'overlay',
            closeButton: "title",
            blockScroll: true,
            title: "Ch·∫ø ƒê·ªô Destroy " + inceptionLevel++,
            offset: {
                x: randomX,
                y: randomY
            },
            content: '<p>Error Code 0x00000' + Math.floor(Math.random() * 99999) + '</p>',
            onCreated: function() {
                this.tooltip = new jBox("Tooltip", {
                    theme: "TooltipBorder",
                    attach: "[data-inception-tooltip]",
                    getContent: "data-inception-tooltip",
                    zIndex: "auto",
                    delayOpen: 100
                });
            },
            onCloseComplete: function() {
                this.destroy();
                if (this.tooltip) {
                    this.tooltip.destroy();
                }
            },
            onOpen: function() {
                setTimeout(OpenWindowError, Math.floor(Math.random() * (200 - 10 + 1)) + 10);
            }
        }).open();
        offsetLevel++;
    }

    function WindowErrorSound() {
        const w = ["./res/v5/files/audio/window-error.mp3", ];
        let i = Math.floor(Math.random() * w.length);
        const a = new Audio(w[i]);

        function p() {
            a.play()
        }
        document.addEventListener("click", p()), a.addEventListener("ended", function() {
            i = (i + 1) % w.length, a.src = w[i], a.play()
        });
    }
    // Count Love Days
    class TimeLove {
        constructor() {
            this.init();
        }
        init() {
            // S·ª£ b·ªçn m nguu n√™n ƒë√£ s√†i split ƒë·ªÉ format l·∫°i th√†nh ng√†y th√°ng nƒÉm thay v√¨ nƒÉm th√°ng ng√†y ƒë·ªÉ d·ªÖ ph√¢n bi·ªát
            var common_time_rela = $('[data-ngayyeu]').attr('data-ngayyeu').split(/-|\/|:/);
            if (common_time_rela.length !== 3 || isNaN(common_time_rela[0]) || isNaN(common_time_rela[1]) || isNaN(common_time_rela[2])) {
                Wstoast.closeAll();
                WsToast('error', 'ƒê·ªãnh d·∫°ng th·ªùi gian sai!');
            }
            this.day = parseInt(common_time_rela[0], 10);
            this.month = parseInt(common_time_rela[1], 10) - 1;
            this.year = parseInt(common_time_rela[2], 10);
            this.update();
            setInterval(this.update.bind(this), 1000);
        }

        update() {
            var TimeRela = new Date() - new Date(this.year, this.month, this.day);
            var seconds = Math.floor((TimeRela / 1000) % 60);
            var minutes = Math.floor((TimeRela / 1000 / 60) % 60);
            var hours = Math.floor((TimeRela / (1000 * 60 * 60)) % 24);
            var days = Math.floor(TimeRela / (1000 * 60 * 60 * 24));
            seconds = seconds < 10 ? '0' + seconds : seconds;
            minutes = minutes < 10 ? '0' + minutes : minutes;
            hours = hours < 10 ? '0' + hours : hours;
            days = days < 10 ? '0' + days : days;
            $('#day').text(days);
            $('#hours').text(hours);
            $('#minute').text(minutes);
            $('#seconds').text(seconds);
        }
    }
    //  $('#td-lovedays').hide();
    //- @X·ª≠ L√Ω Hi·ªán Profile & ƒê·∫øm Ng√†y Y√™u Th√¥ng Qua Cookie -//
    if (GetCookie("LoveDaysVisible") == "true") {
        $('#td-lovedays').show();
        $('.td-content').hide();
    } else {
        $('#td-lovedays').hide();
        $('.td-content').show();
    }
    var icon = $('.mode-loveday').find('i');
    if (GetCookie("IconState") == "home") {
        icon.removeClass('ri-heart-2-line').addClass('ri-home-line');
    } else {
        icon.removeClass('ri-home-line').addClass('ri-heart-2-line');
    }
    //- @X·ª≠ L√Ω Ch·∫ø ƒê·ªô PROFILE & ƒê·∫æM NG√ÄY Y√äU -//
    $('.mode-loveday').click(function() {
        var icon = $(this).find('i');
        if (icon.hasClass('ri-heart-2-line')) {
            document.cookie = "IconState=home; expires=Fri, 31 Dec 9999 23:59:59 GMT";
            Wstoast.closeAll();
            WsToast('info', 'ƒê√£ chuy·ªÉn ch·∫ø ƒë·ªô ƒë·∫øm ng√†y y√™u');
            icon.removeClass('ri-heart-2-line').addClass('ri-home-line');
            document.cookie = "LoveDaysVisible=true; expires=Fri, 31 Dec 9999 23:59:59 GMT";
        } else {
            document.cookie = "IconState=heart; expires=Fri, 31 Dec 9999 23:59:59 GMT";
            Wstoast.closeAll();
            WsToast('info', 'ƒê√£ chuy·ªÉn v·ªÅ ch·∫ø ƒë·ªô profile');
            icon.removeClass('ri-home-line').addClass('ri-heart-2-line');
            document.cookie = "LoveDaysVisible=false; expires=Fri, 31 Dec 9999 23:59:59 GMT";
        }
        $('.td-content').slideToggle();
        $('#td-lovedays').slideToggle();
    });
    //- @M·ªü & ·∫®n M√†n H√¨nh Kho√° -//
    $('.td-lock-screen').click(function() {
        $('.td-welcome').slideUp('slow');
        $('.td-lock-screen').animate({
            opacity: 0
        }, 'slow').css('pointer-events', 'none');
    });

    //- @·∫§n Ho·∫∑c Vu·ªët S·∫Ω ·∫®n M√†n H√¨nh Kho√° -//
    $(document).on('swiperight', function() {
        $('.td-welcome').slideDown('slow');
        $('.td-lock-screen').animate({
            opacity: 1
        }, 'fast').css('pointer-events', 'auto');
    });

    $(document).on('swipeleft', function() {
        $('.td-welcome').slideUp('slow');
        $('.td-lock-screen').animate({
            opacity: 0
        }, 'slow').css('pointer-events', 'none');
    });

    $(document).on("visibilitychange", function() {
        if (!document.hidden) {
            setTimeout(function() {
                var scrollPos = $(window).scrollTop();
                var windowHeight = $(window).height();
                var documentHeight = $(document).height();
                var scrollPercentage = (scrollPos / (documentHeight - windowHeight)) * 100;

                if (scrollPos === 0) {
                    $('.td-welcome').slideDown('slow');
                    $('.td-lock-screen').animate({
                        opacity: 1
                    }, 'fast').css('pointer-events', 'auto');
                }

                if (scrollPercentage === 100) {
                    $('.td-welcome').slideUp('slow');
                    $('.td-lock-screen').animate({
                        opacity: 0
                    }, 'slow').css('pointer-events', 'none');
                }
            }, 200);
        }
    });
    //- @Activite Menu -//
    if (GetCookie("SettingPanelShown") !== "true") {
        $("#SettingPanel").addClass("open"); // T·ª± ƒë·ªông m·ªü b·∫£ng setting n·∫øu trong 1 ng√†y h·ªç v√†o trang web l·∫ßn ƒë·∫ßu ti√™n
        document.cookie = "SettingPanelShown=true; max-age=" + (60 * 60 * 24) + "; path=/";
    }
    //- @Nh·∫•n ƒê·ªÉ M·ªü Menu Setting -//
    $(".toggle").click(function() {
        $("#SettingPanel").toggleClass("open");
    });
    //- ==@ Nh·∫•n B·∫•t K√¨ ·ªû ƒê√¢u ƒê·ªÉ ƒê√≥ng Menu Setting @== -//
    $(document).mouseup(function(e) {
        var container = $("#SettingPanel");
        if (!container.is(e.target) && container.has(e.target).length === 0) {
            container.removeClass("open");
        }
    });
    //- @Change Background -//
    if (GetCookie("background-theme")) {
        $("body").css("background-image", "url(" + GetCookie("background-theme") + ")");
        $(".nk-opt-item.active").removeClass("active");
        $(".nk-opt-item[data-bg='" + GetCookie("background-theme") + "']").addClass("active");
    } else {
        var DefaultBg = $(".nk-opt-item[data-bg]:eq(0)").data("bg"); // Ch·ªçn Background M·∫∑c ƒê·ªãnh (eq t·ª©c ch·ªçn ·∫£nh n√†o l√† m·∫∑c ƒë·ªãnh 0->4)
        $("body").css("background-image", "url(" + DefaultBg + ")");
        $(".nk-opt-item.active").removeClass("active");
        $(".nk-opt-item[data-bg='" + DefaultBg + "']").addClass("active");
        document.cookie = "background-theme=" + DefaultBg;
    }
    $(".nk-opt-set").on("click", ".nk-opt-item[data-bg]", function() {
        var $nkOptSet = $(this).closest(".nk-opt-set");
        $nkOptSet.find(".nk-opt-item[data-bg].active").removeClass("active");
        $(this).addClass("active");
        $("body").css("background-image", "url(" + $(this).data("bg") + ")");
        document.cookie = "background-theme=" + $(this).data("bg");
    });
    //- @Mode Destroy -//
    $(".nk-opt-set").on("click", ".nk-opt-item[data-mode]", function() {
        var mode = $(this).data("mode");
        if (mode === "DisableDestroy") {
            $(".nk-opt-item[data-mode='EnableDestroy']").removeClass("active");
            $(this).addClass("active");
            $("#main-container2").fadeOut(2000);
            $("#main-container").delay(2000).fadeIn(2000);
        } else if (mode === "EnableDestroy") {
            function A() {
                for (i = 0; i < DIL; i++)(DIS = DI[i].style).position = "absolute", DIS.left = Math.sin(R * x1 + i * x2 + x3) * x4 + x5 + "px", DIS.top = Math.cos(R * y1 + i * y2 + y3) * y4 + y5 + "px";
                R++
            }
            R = 0, x1 = .1, y1 = .05, x2 = .25, y2 = .24, x3 = 1.6, y3 = .24, x4 = 10, y4 = 10, x5 = 0, y5 = 0, DIL = (DI = document.getElementsByTagName("img")).length, setInterval(A, 5);
            OpenWindowError();
            WindowErrorSound()
            $("#SettingPanel").hide();
            $(".nk-opt-item[data-mode='DisableDestroy']").removeClass("active");
            $(this).addClass("active");
            $("#main-container").fadeOut(2000);
            $("#main-container2").delay(2000).fadeIn(2000);
        }
    });
    //- @Theme Menu -//
    $(".nk-opt-item[data-update]").click(function() {
        var UpdateMode = $(this).data("update");
        $(".nk-opt-item[data-update]").removeClass("active");
        $(this).addClass("active");
        if (UpdateMode === "dark-mode") {
            $(".nk-demo-panel").addClass("dark-mode");
            $(".nk-demo-panel").attr("style", "background:#101924!important;color:#b6c6e3");
            $(".loading-bg").addClass("dark-loader");
            document.cookie = "theme-mode=dark";
        } else if (UpdateMode === "light-mode") {
            $(".nk-demo-panel").removeClass("dark-mode");
            $(".nk-demo-panel").removeAttr("style");
            $(".loading-bg").removeClass("dark-loader");
            document.cookie = "theme-mode=light";
        }
    });
    //- ==@ Thay ƒê·ªïi Giao Di·ªán Profile @== -//
    $(".change-skin").click(function() {
        var $html = $('html');
        if ($html.hasClass('dark')) {
            $html.removeClass('dark');
            document.cookie = "theme-skin=light";
            $('.theme-icon').removeClass('ni-moon').addClass('ni-sun');
        } else {
            $html.addClass('dark');
            document.cookie = "theme-skin=dark";
            $('.theme-icon').removeClass('ni-sun').addClass('ni-moon');
        }
    });
    var $html = $('html');
    if (GetCookie("theme-skin") === "dark") {
        $html.addClass('dark');
        $('.theme-icon').removeClass('ni-sun').addClass('ni-moon');
    } else {
        $html.removeClass('dark');
        $('.theme-icon').removeClass('ni-moon').addClass('ni-sun');
    }
    //- @Cookie Theme Menu-//
    if (GetCookie("theme-mode") === "dark") {
        $(".nk-opt-item[data-update='dark-mode']").click();
    } else {
        $(".nk-opt-item[data-update='light-mode']").click();
    }
    $(".setting-site").click(function(event) {
        event.stopPropagation();
        $("#nav").toggleClass("hide");
        $("#share_card").addClass("td-popup_on");
    });

    $(".close-nav").click(function() {
        $("#nav").addClass("hide");
        $("#share_card").addClass("td-popup_on");
    });
    //- ==@ S√†i ToolTip C·ªßa jBox @== -//
    new jBox('Tooltip', {
        attach: '.td_copy',
        trigger: 'mouseenter',
        content: $(this).attr('title'),
        position: {
            x: 'center',
            y: 'bottom'
        }
    });
    $(".td_copy").on("click touchend", function() {
        var textarea = $("<textarea>")
            .val($(this).text().trim())
            .css({
                position: "fixed",
                top: 0,
                left: 0,
                opacity: 0
            })
            .appendTo("body");
        textarea[0].focus();
        textarea[0].select();
        try {
            var successful = document.execCommand("copy");
            var message = successful ? "ƒê√£ sao ch√©p li√™n k·∫øt" : "Kh√¥ng th·ªÉ sao ch√©p li√™n k·∫øt.";
            if (successful) {
                WsToast('success', message);
            } else {
                WsToast('error', message);
            }
        } catch (err) {
            WsToast('error', 'Kh√¥ng th·ªÉ sao ch√©p li√™n k·∫øt.');
        }

        textarea.remove();
    });

    //- @Chuy·ªÉn H∆∞·ªõng Trong Data-Href-//
    class Redirection {
        constructor(href) {
            this.href = encodeURIComponent(href);
        }
        RedirectClick() {
            window.open(decodeURIComponent(this.href), '_blank'); // S√†i window.open thay cho window.location.href, n·∫øu mu·ªën s√†i th√¨ c·ª© thay.
        }
    }
    $('.link-item').click(function(e) {
        e.preventDefault();
        new Redirection($(this).attr('data-href')).RedirectClick();
    });
    $(document).click(function(event) {
        if (!$(event.target).closest('.td-popup').length && !$(event.target).is('.setting-site')) {
            $("#nav").addClass("hide");
            $("#share_card").removeClass("td-popup_on").addClass("td-popup_off");
        }
    });
    //- @H√†m L·∫•y Cookie-//
    function GetCookie(name) {
        var cookieArr = document.cookie.split(";");
        for (var i = 0; i < cookieArr.length; i++) {
            var cookiePair = cookieArr[i].split("=");
            if (name == cookiePair[0].trim()) {
                return decodeURIComponent(cookiePair[1]);
            }
        }
        return null;
    }
    //- @Click To Full Screen -//
    $(".full-screen").on("click", function() {
        var elem = document.documentElement;
        if (fullscreenEnabled = document.fullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled || document.msFullscreenEnabled) {
            if (!document.fullscreenElement && !document.mozFullScreenElement && !document.webkitFullscreenElement && !document.msFullscreenElement) {
                if (elem.requestFullscreen) {
                    elem.requestFullscreen();
                } else if (elem.mozRequestFullScreen) {
                    /* Firefox */
                    elem.mozRequestFullScreen();
                } else if (elem.webkitRequestFullscreen) {
                    /* Chrome, Safari & Opera */
                    elem.webkitRequestFullscreen();
                } else if (elem.msRequestFullscreen) {
                    /* IE/Edge */
                    elem.msRequestFullscreen();
                }
            } else {
                if (document.exitFullscreen) {
                    document.exitFullscreen();
                } else if (document.mozCancelFullScreen) {
                    /* Firefox */
                    document.mozCancelFullScreen();
                } else if (document.webkitExitFullscreen) {
                    /* Chrome, Safari & Opera */
                    document.webkitExitFullscreen();
                } else if (document.msExitFullscreen) {
                    /* IE/Edge */
                    document.msExitFullscreen();
                }
            }
        } else {
            WsToast('error', 'Tr√¨nh duy·ªát kh√¥ng h·ªó tr·ª£ ch·∫ø ƒë·ªô n√†y.');
        }
    });
    //- @Music Play-//
    GetCookie('WsPlayMusic') && new Audio(GetCookie('WsPlayMusic')).addEventListener('canplay', function() {this.play();});
    class MusicPlayer {
        constructor() {
            this.u = "";
            this.a = null;
            this.l = true;
            this.n = null;
            this.te = null;
            this.tt = "";
            this.initials = {};
            $(".music_menu_list li").each((index, element) => {
                const url = $(element).attr("url");
                const title = $(element).find(".title").text();
                this.initials[url] = title;
            });
            $(".music_menu_list li").click(this.MusicPlay.bind(this));
        }

        MusicPlay(event) {
            $(".music_menu_list li").removeClass("selected");
            $(event.currentTarget).addClass("selected");
            const u = $(event.currentTarget).attr("url");
            Wstoast.closeAll();
            if (u) {
                let t = $(event.currentTarget).find(".title");
                let o = t.text();
                t.text("ƒêang ph√°t...");
                WsToast('success', 'ƒêang ph√°t: ' + o);
                if (this.a && !this.a.paused) {
                    this.a.pause();
                }
                if (this.u === u && !this.a.paused) {
                    return;
                }
                const n = new Audio(u);
                n.addEventListener('ended', this.NextMusic.bind(this));
                this.n = n;
                n.play();
                if (this.te && this.tt) {
                    this.te.text(this.tt);
                }

                this.a = n;
                this.u = u;
                this.te = t;
                this.tt = o;

                document.cookie = `WsPlayMusic=${u}; expires=Fri, 31 Dec 9999 23:59:59 GMT`;
            }
        }

        NextMusic() {
            let s = $(".music_menu_list li.selected");
            let n = s.next();

            if (n.length === 0 && !this.l) {
                return;
            }

            if (n.length === 0 && this.l) {
                n = $(".music_menu_list li:first-child");
            }

            s.removeClass("selected");
            n.addClass("selected");

            const nu = n.attr("url");
            const na = new Audio(nu);
            na.addEventListener('ended', this.NextMusic.bind(this));
            na.play();

            let t = n.find(".title");
            let o = t.text();

            let te = this.te;
            let tt = this.tt;

            t.text("ƒêang ph√°t...");
            WsToast('success', 'B√†i k·∫ø ti·∫øp: ' + o);

            if (this.a && !this.a.paused) {
                this.a.pause();
            }

            if (this.u === nu && !this.a.paused) {
                return;
            }
            const currentUrl = this.u;
            const currentTitle = this.initials[currentUrl];
            s.find(".title").text(currentTitle);

            this.a = na;
            this.u = nu;
            this.n = null;
        }
    }

    //- ==@ OBF Class Use Hex String (Fake) @== -//
    class O {
        constructor() {
            this.o = Array.from({
                length: 20
            }, () => '\\x' + Math.floor(Math.random() * 16).toString(16) + Math.floor(Math.random() * 16).toString(16)).join('');
        }
    }
    (($) => {
        const o = new O();
        $('*').each(function() { // S√†i * T·ª©c L√† Root (Ch·ªçn T·∫•t C·∫£ Th·∫ª HTML)
            $(this).addClass(o.o);
        });
    })(jQuery);
    setInterval(() => $('#real-time').text(new Date().toLocaleTimeString()), 1000);
    function ShowToast() {
        x.addClass('show');
        setTimeout(function(){ x.removeClass('show'); }, 5000);
    }      
    var x = $('#Toast');
    x.html('Resources Code V5.0.0');
    //- @Hi·ªán/·∫®n Loader Screen Th√¥ng Minh-//
    const LoadingPercentage = $('#loading-percentage');
    let LoadingPercentageTimer;
    $(document).ready(function() {
        LoadingPercentageTimer = setInterval(function() {
            var progressBar = $('.pace-progress');
            if (!progressBar.length) return;
            var currentValue = progressBar.attr('data-progress-text');

            if (currentValue !== LoadingPercentage.text()) {
                LoadingPercentage.text(currentValue);
                var percentage = parseInt(currentValue);
                var translateValue = 'translate3d(' + percentage + '%, 0px, 0px)';
                progressBar.css('transform', translateValue);

                if (currentValue === '100%') {
                    $('.pace-active').animate({
                        top: '-100px'
                    }, 'slow', function() {
                        $(this).hide();
                    });
                    // ƒê√¢y l√† ƒëo·∫°n m√£ ·∫©n loader screen d·ª± ph√≤ng (theo ti·∫øn tr√¨nh th∆∞ vi·ªán pace-progress), n·∫øu pjax ko ho·∫°t ƒë·ªông
                    if ($('#loading-box').is(':visible')) {
                        ShowToast();
                        Wstoast.closeAll();
                        WsToast('info', 'T√†i nguy√™n ƒë√£ t·∫£i xong :)');
                        WsLoaded = true;
                        $('#loading-box').fadeOut('slow');
                    }
                    clearInterval(LoadingPercentageTimer);
                }
            }
        }, 100);
        //- @S√†i pjax ƒë·ªÉ ·∫©n khi trang ƒë√£ t·∫£i xong-//
        const preloader = {
            endLoading: () => {
                Wstoast.closeAll();
                WsToast('info', 'T√†i nguy√™n ƒë√£ t·∫£i xong :)');
                $('#loading-box').fadeOut('slow');
                WsLoaded = true;
            },
            initLoading: () => {
                document.body.style.overflow = '';
                $('#loading-box').removeClass('loaded');
            }
        }

        $(window).on('load', () => {
            preloader.endLoading();
        });

        if (true) {
            $(document).on('pjax:send', () => {
                preloader.initLoading();
            });
            $(document).on('pjax:complete', () => {
                preloader.endLoading();
            });
        }
    });
    //- @T·ª± ƒë·ªông th√™m cache th√¥ng minh (khi s·ª≠a code tr√¨nh duy·ªát s·∫Ω l∆∞u code c≈© n√™n ƒë√¢y l√† ƒëo·∫°n m√£ gi√∫p code lu√¥n l√† m·ªõi nh·∫•t) c√≥ th·ªÉ g√¢y lag n·∫øu host qu√° √≠u-//
    // $('script[src], link[rel="stylesheet"]').each(function() {
    //     var src=$(this).attr('src') || $(this).attr('href');
    //     if (src && (src.endsWith('.js') || src.endsWith('.css'))) {
    //         $(this).attr('src',src+src.includes('?')?'&':'?'+'v='+Math.random().toString(36).substr(2, 5));
    //     }
    // });
    //- @Th·ªùi Gian ƒê·ªìng H·ªì ·ªû M√†n H√¨nh Kho√° (Lock-Screen)-//
    class ClockTime {
        constructor(element) {
            this.element = $(element);
            this.TimeNows();
            setInterval(() => this.TimeNows(), 1000);
        }

        TimeNows() {
            const now = new Date();
            const hours = now.getHours().toString().padStart(2, '0');
            const minutes = now.getMinutes().toString().padStart(2, '0');
            this.element.text(`${hours}:${minutes}`);
        }
    }
    //- @Random Description & Chuy·ªÉn Description T·ª± ƒê·ªông-//
    class Description {
        constructor(descriptions) {
            this.descriptions = descriptions;
            this.element = $('.web_desc');
            this.Description();
        }

        Description() {
            const description = this.descriptions[Math.floor(Math.random() * this.descriptions.length)];
            this.element.fadeOut(500, () => {
                this.element.html(description).fadeIn(500);
            });
        }
    }
    const descriptions = [
        "G·ªçi em l√† c√¥ng ch√∫a v√¨ ho√†ng t·ª≠ ƒëang ƒë·ª©ng ch·ªù em n√®!",
        "Ch∆∞a ƒë∆∞·ª£c s·ª± cho ph√©p m√† ƒë√£ t·ª± √Ω th√≠ch em. Anh xin l·ªói nh√© c√¥ng ch√∫a!",
        "Em nh√¨n r·∫•t gi·ªëng ng∆∞·ªùi h·ªç h√†ng c·ªßa anh. ƒê√≥ ch√≠nh l√† con d√¢u c·ªßa m·∫π anh!",
        "Tr√°i ƒê·∫•t quay quanh M·∫∑t Tr·ªùi. C√≤n em th√¨ quay m√£i trong t√¢m tr√≠ anh!",
        "Vector ch·ªâ c√≥ m·ªôt chi·ªÅu. Anh d√¢n chuy√™n to√°n ch·ªâ y√™u m·ªôt ng∆∞·ªùi.",
        "Anh b√©o th·∫ø n√†y l√† b·ªüi v√¨ trong l√≤ng anh c√≥ em n·ªØa.",
        "Nghe ƒë√¢y! Em ƒë√£ b·ªã b·∫Øt v√¨ t·ªôi qu√° xinh ƒë·∫πp.",
        "Anh ch·ªâ mu·ªën b√™n c·∫°nh em hai l·∫ßn ƒë√≥ l√† b√¢y gi·ªù v√† m√£i m√£i.",
        "Bao nhi√™u c√¢n th√≠nh cho v·ª´a? Bao nhi√™u c√¢n b·∫£ m·ªõi l·ª´a ƒë∆∞·ª£c em?",
        "V≈© tr·ª• c·ªßa ng∆∞·ªùi ta l√† m√†u ƒëen huy·ªÅn b√≠. C√≤n v≈© tr·ª• c·ªßa anh b√© t√≠, thu nh·ªè l·∫°i l√† em.",
        "Anh r·∫•t y√™u th√†nh ph·ªë n√†y. Kh√¥ng ph·∫£i v√¨ n√≥ c√≥ g√¨, m√† v√¨ n√≥ c√≥ em.",
        "Anh b·∫≠n v·ªõi t·∫•t c·∫£ m·ªçi ƒëi·ªÅu. Nh∆∞ng v·∫´n lu√¥n r·∫£nh ƒë·ªÉ nh·ªõ ƒë·∫øn em.",
        "C√†nh c√¢y c√≤n c√≥ l√°. Ch√∫ c√° v·∫´n ƒëang b∆°i. Sao em c·ª© m·∫£i ch∆°i. Ch·∫≥ng ch·ªãu y√™u anh th·∫ø!",
        "Em nh√† ·ªü ƒë√¢u th·∫ø? C·ª© t·ªõi lui trong tim anh kh√¥ng bi·∫øt ƒë∆∞·ªùng v·ªÅ nh√† √†?",
        "Cu·ªôc ƒë·ªùi anh v·ªën l√† m·ªôt ƒë∆∞·ªùng th·∫≥ng, ch·ªâ v√¨ g·∫∑p em m√† r·∫Ω ngang.",
        "V·ªõi th·∫ø gi·ªõi em ch·ªâ l√† m·ªôt ng∆∞·ªùi. Nh∆∞ng v·ªõi anh, em l√† c·∫£ th·∫ø gi·ªõi.",
        "Em c√≥ th·ªÉ ƒë·ª´ng c∆∞·ªùi n·ªØa ƒë∆∞·ª£c kh√¥ng? Da anh ƒëen h·∫øt r·ªìi.",
        "Anh ƒë√¢y ch·∫≥ng th√≠ch nhi·ªÅu l·ªùi. Nh√¨n em l√† bi·∫øt c·∫£ ƒë·ªùi c·ªßa anh.",
        "C·∫£m l·∫°nh c√≥ th·ªÉ do gi√≥, nh∆∞ng, c·∫£m n·∫Øng th√¨ ch·∫Øc ch·∫Øn do em.",
        "Tr·ª©ng r√°n c·∫ßn m·ª°, b·∫Øp c·∫ßn b∆°. Y√™u kh√¥ng c·∫ßn c·ªõ, c·∫ßn em c∆°!",
        "Cafe ƒë·∫Øng th√™m ƒë∆∞·ªùng s·∫Ω ng·ªçt, c√≤n cu·ªôc ƒë·ªùi anh th√™m em s·∫Ω h·∫°nh ph√∫c.",
        "Gi·ªØa cu·ªôc ƒë·ªùi h√†ng ng√†n c√°m d·ªó, nh∆∞ng, anh v·∫´n ch·ªâ c·∫ßn b·∫øn ƒë·ªó l√† em.",
        "C√≥ ng∆∞·ªùi r·ªß anh ƒëi ƒÉn t·ªëi, nh∆∞ng anh t·ª´ ch·ªëi v√¨ th·ª±c ƒë∆°n kh√¥ng c√≥ em.",
        "Em c√≥ bi·∫øt v√¨ sao ƒë·∫ßu tu·∫ßn l·∫°i b·∫Øt ƒë·∫ßu b·∫±ng th·ª© hai kh√¥ng? B·ªüi v√¨ em l√† th·ª© nh·∫•t!",
        "Oxy l√† ngu·ªìn s·ªëng c·ªßa nh√¢n lo·∫°i. C√≤n em ch√≠nh l√† ngu·ªìn s·ªëng c·ªßa anh.",
        "Em b·ªã c·∫≠n th·ªã √†? N·∫øu kh√¥ng t·∫°i sao kh√¥ng nh√¨n th·∫•y anh th√≠ch em ch·ª©?",
        "H√¥m qua anh g·∫∑p √°c m·ªông v√¨ trong gi·∫•c m·ªông ƒë√≥ kh√¥ng c√≥ em.",
        "U·ªëng nh·∫ßm m·ªôt √°nh m·∫Øt, c∆°n say theo c·∫£ ƒë·ªùi. Th∆∞∆°ng nh·∫ßm m·ªôt n·ª• c∆∞·ªùi, c·∫£ m·ªôt ƒë·ªùi phi√™u l√£ng.",
        "D·∫°o n√†y em c√≥ th·∫•y m·ªèi ch√¢n kh√¥ng? Sao c·ª© ƒëi m√£i trong ƒë·∫ßu anh th·∫ø?",
        "H√¨nh nh∆∞ em th√≠ch tr√† s·ªØa l·∫Øm ph·∫£i kh√¥ng? Anh c≈©ng th√≠ch em nh∆∞ th·∫ø ƒë·∫•y.",
        "N·∫øu em l√† n∆∞·ªõc m·∫Øt th√¨ anh s·∫Ω kh√¥ng bao gi·ªù kh√≥c ƒë·ªÉ l·∫°c m·∫•t em ƒë√¢u.",
        "ƒê√¥i m·∫Øt em c√≤n xanh h∆°n c·∫£ ƒê·∫°i T√¢y D∆∞∆°ng v√† anh th√¨ b·ªã l·∫°c tr√™n bi·ªÉn c·∫£ m·∫•t r·ªìi.",
        "N·∫øu n·ª• h√¥n l√† nh·ªØng b√¥ng tuy·∫øt th√¨ anh s·∫Ω g·ª≠i ƒë·∫øn em m·ªôt c∆°n b√£o tuy·∫øt",
        "Ph·∫£i chƒÉng em l√† m·ªôt ·∫£o thu·∫≠t gia? B·ªüi m·ªói khi anh nh√¨n em l√† m·ªçi th·ª© xung quanh ƒë·ªÅu bi·∫øn m·∫•t.",
        "Anh c√≥ th·ªÉ ch·ª•p ·∫£nh em ƒë∆∞·ª£c kh√¥ng? ƒê·ªÉ ch·ª©ng minh v·ªõi l≈© b·∫°n r·∫±ng thi√™n th·∫ßn l√† c√≥ th·∫≠t.",
        "Anh c√≥ th·ªÉ ƒëi theo em ƒë∆∞·ª£c kh√¥ng? B·ªüi anh ƒë∆∞·ª£c b·ªë m·∫π d·∫°y r·∫±ng ph·∫£i theo ƒëu·ªïi gi·∫•c m∆° c·ªßa m√¨nh.",
        "N·∫øu khi anh nghƒ© ƒë·∫øn em m√† c√≥ m·ªôt ng√¥i sao bi·∫øn m·∫•t. V·∫≠y ch·∫Øc c·∫£ b·∫ßu tr·ªùi n√†y kh√¥ng c√≤n sao.",
    ];
    const description = new Description(descriptions);
    setInterval(() => description.Description(), 7000); // Chuy·ªÉn Desc M·ªõi Sau 7s
    new MusicPlayer();
    new TimeLove();
    new ClockTime('.date');
    // $('.skill-per').each(function() {
    //     var $this=$(this);
    //     var per=$this.attr('per');
    //     $this.css("width", per + '%');
    //     $({
    //       animatedValue: 0
    //     }).animate({
    //       animatedValue: per
    //     }, {
    //       duration: 10000,
    //       step: function() {
    //         $this.attr('per', Math.floor(this.animatedValue) + '%');
    //       },
    //       complete: function() {
    //         $this.attr('per', Math.floor(this.animatedValue) + '%');
    //       }
    //     });
    //   });
    //- @L√° R∆°i-//
    var stop, staticx, img = new Image;

    function Sakura(t, n, e, i, a) {
        this.x = t, this.y = n, this.s = e, this.r = i, this.fn = a
    }

    function getRandom(t) {
        var n, e;
        switch (t) {
            case "x":
                n = Math.random() * window.innerWidth;
                break;
            case "y":
                n = Math.random() * window.innerHeight;
                break;
            case "s":
                n = Math.random();
                break;
            case "r":
                n = 6 * Math.random();
                break;
            case "fnx":
                e = -.5 + 1 * Math.random(), n = function(t, n) {
                    return t + .5 * e - 1.7
                };
                break;
            case "fny":
                e = 1.5 + .7 * Math.random(), n = function(t, n) {
                    return n + e
                };
                break;
            case "fnr":
                e = .03 * Math.random(), n = function(t) {
                    return t + e
                }
        }
        return n
    }

    function startSakura() {
        requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame || window.oRequestAnimationFrame;
        var t, n, e, i, a, s, r, o, h = document.createElement("canvas");
        staticx = !0, h.height = window.innerHeight, h.width = window.innerWidth, h.setAttribute("style", "position: fixed;left: 0;top: 0;pointer-events: none;z-index: 8888;"), h.setAttribute("id", "canvas_sakura"), document.getElementsByTagName("body")[0].appendChild(h), o = h.getContext("2d");
        for (var d = new SakuraList, m = 0; m < 10; m++) n = getRandom("x"), e = getRandom("y"), a = getRandom("r"), i = getRandom("s"), s = getRandom("fnx"), r = getRandom("fny"), randomFnR = getRandom("fnr"), (t = new Sakura(n, e, i, a, {
            x: s,
            y: r,
            r: randomFnR
        })).draw(o), d.push(t);
        stop = requestAnimationFrame(function() {
            o.clearRect(0, 0, h.width, h.height), d.update(), d.draw(o), stop = requestAnimationFrame(arguments.callee)
        })
    }

    function stopp() {
        if (staticx) {
            var t = document.getElementById("canvas_sakura");
            t.parentNode.removeChild(t), window.cancelAnimationFrame(stop), staticx = !1
        } else startSakura()
    }
    sakura = "//i.ibb.co/mN296Wb/thanhdieu.png", leaf = "//i.ibb.co/mN296Wb/thanhdieu.png", maple = "//i.ibb.co/mN296Wb/thanhdieu.png", user = "", img.src = maple, Sakura.prototype.draw = function(t) {
        t.save(), this.s, t.translate(this.x, this.y), t.rotate(this.r), t.drawImage(img, 0, 0, 30 * this.s, 30 * this.s), t.restore()
    }, Sakura.prototype.update = function() {
        this.x = this.fn.x(this.x, this.y), this.y = this.fn.y(this.y, this.y), this.r = this.fn.r(this.r), (this.x > window.innerWidth || this.x < 0 || this.y > window.innerHeight || this.y < 0) && (this.r = getRandom("fnr"), Math.random() > .4 ? (this.x = getRandom("x"), this.y = 0, this.s = getRandom("s"), this.r = getRandom("r")) : (this.x = window.innerWidth, this.y = getRandom("y"), this.s = getRandom("s"), this.r = getRandom("r")))
    }, (SakuraList = function() {
        this.list = []
    }).prototype.push = function(t) {
        this.list.push(t)
    }, SakuraList.prototype.update = function() {
        for (var t = 0, n = this.list.length; t < n; t++) this.list[t].update()
    }, SakuraList.prototype.draw = function(t) {
        for (var n = 0, e = this.list.length; n < e; n++) this.list[n].draw(t)
    }, SakuraList.prototype.get = function(t) {
        return this.list[t]
    }, SakuraList.prototype.size = function() {
        return this.list.length
    }, window.onresize = function() {
        document.getElementById("canvas_snow")
    }, img.onload = function() {
        startSakura()
    };
    // End ThanhDieuV5
});
